/*
 * Ais-Stream WebsocketObjects
 *
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace aisStream.Test.Model
{
    /// <summary>
    ///  Class for testing ShipStaticData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ShipStaticDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ShipStaticData
        //private ShipStaticData instance;

        public ShipStaticDataTests()
        {
            // TODO uncomment below to create an instance of ShipStaticData
            //instance = new ShipStaticData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShipStaticData
        /// </summary>
        [Fact]
        public void ShipStaticDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" ShipStaticData
            //Assert.IsType<ShipStaticData>(instance);
        }

        /// <summary>
        /// Test the property 'MessageID'
        /// </summary>
        [Fact]
        public void MessageIDTest()
        {
            // TODO unit test for the property 'MessageID'
        }

        /// <summary>
        /// Test the property 'RepeatIndicator'
        /// </summary>
        [Fact]
        public void RepeatIndicatorTest()
        {
            // TODO unit test for the property 'RepeatIndicator'
        }

        /// <summary>
        /// Test the property 'UserID'
        /// </summary>
        [Fact]
        public void UserIDTest()
        {
            // TODO unit test for the property 'UserID'
        }

        /// <summary>
        /// Test the property 'Valid'
        /// </summary>
        [Fact]
        public void ValidTest()
        {
            // TODO unit test for the property 'Valid'
        }

        /// <summary>
        /// Test the property 'AisVersion'
        /// </summary>
        [Fact]
        public void AisVersionTest()
        {
            // TODO unit test for the property 'AisVersion'
        }

        /// <summary>
        /// Test the property 'ImoNumber'
        /// </summary>
        [Fact]
        public void ImoNumberTest()
        {
            // TODO unit test for the property 'ImoNumber'
        }

        /// <summary>
        /// Test the property 'CallSign'
        /// </summary>
        [Fact]
        public void CallSignTest()
        {
            // TODO unit test for the property 'CallSign'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Dimension'
        /// </summary>
        [Fact]
        public void DimensionTest()
        {
            // TODO unit test for the property 'Dimension'
        }

        /// <summary>
        /// Test the property 'FixType'
        /// </summary>
        [Fact]
        public void FixTypeTest()
        {
            // TODO unit test for the property 'FixType'
        }

        /// <summary>
        /// Test the property 'Eta'
        /// </summary>
        [Fact]
        public void EtaTest()
        {
            // TODO unit test for the property 'Eta'
        }

        /// <summary>
        /// Test the property 'MaximumStaticDraught'
        /// </summary>
        [Fact]
        public void MaximumStaticDraughtTest()
        {
            // TODO unit test for the property 'MaximumStaticDraught'
        }

        /// <summary>
        /// Test the property 'Destination'
        /// </summary>
        [Fact]
        public void DestinationTest()
        {
            // TODO unit test for the property 'Destination'
        }

        /// <summary>
        /// Test the property 'Dte'
        /// </summary>
        [Fact]
        public void DteTest()
        {
            // TODO unit test for the property 'Dte'
        }

        /// <summary>
        /// Test the property 'Spare'
        /// </summary>
        [Fact]
        public void SpareTest()
        {
            // TODO unit test for the property 'Spare'
        }
    }
}
