/*
 * Ais-Stream WebsocketObjects
 *
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace aisStream.Test.Model
{
    /// <summary>
    ///  Class for testing ChannelManagement
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ChannelManagementTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ChannelManagement
        //private ChannelManagement instance;

        public ChannelManagementTests()
        {
            // TODO uncomment below to create an instance of ChannelManagement
            //instance = new ChannelManagement();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelManagement
        /// </summary>
        [Fact]
        public void ChannelManagementInstanceTest()
        {
            // TODO uncomment below to test "IsType" ChannelManagement
            //Assert.IsType<ChannelManagement>(instance);
        }

        /// <summary>
        /// Test the property 'MessageID'
        /// </summary>
        [Fact]
        public void MessageIDTest()
        {
            // TODO unit test for the property 'MessageID'
        }

        /// <summary>
        /// Test the property 'RepeatIndicator'
        /// </summary>
        [Fact]
        public void RepeatIndicatorTest()
        {
            // TODO unit test for the property 'RepeatIndicator'
        }

        /// <summary>
        /// Test the property 'UserID'
        /// </summary>
        [Fact]
        public void UserIDTest()
        {
            // TODO unit test for the property 'UserID'
        }

        /// <summary>
        /// Test the property 'Valid'
        /// </summary>
        [Fact]
        public void ValidTest()
        {
            // TODO unit test for the property 'Valid'
        }

        /// <summary>
        /// Test the property 'Spare1'
        /// </summary>
        [Fact]
        public void Spare1Test()
        {
            // TODO unit test for the property 'Spare1'
        }

        /// <summary>
        /// Test the property 'ChannelA'
        /// </summary>
        [Fact]
        public void ChannelATest()
        {
            // TODO unit test for the property 'ChannelA'
        }

        /// <summary>
        /// Test the property 'ChannelB'
        /// </summary>
        [Fact]
        public void ChannelBTest()
        {
            // TODO unit test for the property 'ChannelB'
        }

        /// <summary>
        /// Test the property 'TxRxMode'
        /// </summary>
        [Fact]
        public void TxRxModeTest()
        {
            // TODO unit test for the property 'TxRxMode'
        }

        /// <summary>
        /// Test the property 'LowPower'
        /// </summary>
        [Fact]
        public void LowPowerTest()
        {
            // TODO unit test for the property 'LowPower'
        }

        /// <summary>
        /// Test the property 'Area'
        /// </summary>
        [Fact]
        public void AreaTest()
        {
            // TODO unit test for the property 'Area'
        }

        /// <summary>
        /// Test the property 'Unicast'
        /// </summary>
        [Fact]
        public void UnicastTest()
        {
            // TODO unit test for the property 'Unicast'
        }

        /// <summary>
        /// Test the property 'IsAddressed'
        /// </summary>
        [Fact]
        public void IsAddressedTest()
        {
            // TODO unit test for the property 'IsAddressed'
        }

        /// <summary>
        /// Test the property 'BwA'
        /// </summary>
        [Fact]
        public void BwATest()
        {
            // TODO unit test for the property 'BwA'
        }

        /// <summary>
        /// Test the property 'BwB'
        /// </summary>
        [Fact]
        public void BwBTest()
        {
            // TODO unit test for the property 'BwB'
        }

        /// <summary>
        /// Test the property 'TransitionalZoneSize'
        /// </summary>
        [Fact]
        public void TransitionalZoneSizeTest()
        {
            // TODO unit test for the property 'TransitionalZoneSize'
        }

        /// <summary>
        /// Test the property 'Spare4'
        /// </summary>
        [Fact]
        public void Spare4Test()
        {
            // TODO unit test for the property 'Spare4'
        }
    }
}
