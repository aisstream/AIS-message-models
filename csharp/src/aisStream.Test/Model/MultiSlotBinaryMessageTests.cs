/*
 * Ais-Stream WebsocketObjects
 *
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace aisStream.Test.Model
{
    /// <summary>
    ///  Class for testing MultiSlotBinaryMessage
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MultiSlotBinaryMessageTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MultiSlotBinaryMessage
        //private MultiSlotBinaryMessage instance;

        public MultiSlotBinaryMessageTests()
        {
            // TODO uncomment below to create an instance of MultiSlotBinaryMessage
            //instance = new MultiSlotBinaryMessage();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MultiSlotBinaryMessage
        /// </summary>
        [Fact]
        public void MultiSlotBinaryMessageInstanceTest()
        {
            // TODO uncomment below to test "IsType" MultiSlotBinaryMessage
            //Assert.IsType<MultiSlotBinaryMessage>(instance);
        }

        /// <summary>
        /// Test the property 'MessageID'
        /// </summary>
        [Fact]
        public void MessageIDTest()
        {
            // TODO unit test for the property 'MessageID'
        }

        /// <summary>
        /// Test the property 'RepeatIndicator'
        /// </summary>
        [Fact]
        public void RepeatIndicatorTest()
        {
            // TODO unit test for the property 'RepeatIndicator'
        }

        /// <summary>
        /// Test the property 'UserID'
        /// </summary>
        [Fact]
        public void UserIDTest()
        {
            // TODO unit test for the property 'UserID'
        }

        /// <summary>
        /// Test the property 'Valid'
        /// </summary>
        [Fact]
        public void ValidTest()
        {
            // TODO unit test for the property 'Valid'
        }

        /// <summary>
        /// Test the property 'DestinationIDValid'
        /// </summary>
        [Fact]
        public void DestinationIDValidTest()
        {
            // TODO unit test for the property 'DestinationIDValid'
        }

        /// <summary>
        /// Test the property 'ApplicationIDValid'
        /// </summary>
        [Fact]
        public void ApplicationIDValidTest()
        {
            // TODO unit test for the property 'ApplicationIDValid'
        }

        /// <summary>
        /// Test the property 'DestinationID'
        /// </summary>
        [Fact]
        public void DestinationIDTest()
        {
            // TODO unit test for the property 'DestinationID'
        }

        /// <summary>
        /// Test the property 'Spare1'
        /// </summary>
        [Fact]
        public void Spare1Test()
        {
            // TODO unit test for the property 'Spare1'
        }

        /// <summary>
        /// Test the property 'ApplicationID'
        /// </summary>
        [Fact]
        public void ApplicationIDTest()
        {
            // TODO unit test for the property 'ApplicationID'
        }

        /// <summary>
        /// Test the property 'Payload'
        /// </summary>
        [Fact]
        public void PayloadTest()
        {
            // TODO unit test for the property 'Payload'
        }

        /// <summary>
        /// Test the property 'Spare2'
        /// </summary>
        [Fact]
        public void Spare2Test()
        {
            // TODO unit test for the property 'Spare2'
        }

        /// <summary>
        /// Test the property 'CommunicationStateIsItdma'
        /// </summary>
        [Fact]
        public void CommunicationStateIsItdmaTest()
        {
            // TODO unit test for the property 'CommunicationStateIsItdma'
        }

        /// <summary>
        /// Test the property 'CommunicationState'
        /// </summary>
        [Fact]
        public void CommunicationStateTest()
        {
            // TODO unit test for the property 'CommunicationState'
        }
    }
}
